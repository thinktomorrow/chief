<?php
declare(strict_types=1);

namespace Thinktomorrow\Chief\Admin\Mediagallery;

use Illuminate\Support\Str;

class MimetypeIcon
{
    private $mapping = [
        'application/pdf' => '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"/><polyline points="13 2 13 9 20 9"/></svg>',
        'video' => '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-film"><rect x="2" y="2" width="20" height="20" rx="2.18" ry="2.18"/><line x1="7" y1="2" x2="7" y2="22"/><line x1="17" y1="2" x2="17" y2="22"/><line x1="2" y1="12" x2="22" y2="12"/><line x1="2" y1="7" x2="7" y2="7"/><line x1="2" y1="17" x2="7" y2="17"/><line x1="17" y1="17" x2="22" y2="17"/><line x1="17" y1="7" x2="22" y2="7"/></svg>',
    ];

    private static $fallback = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"/><polyline points="13 2 13 9 20 9"/></svg>';

    /** @var string */
    private $mimetype;

    private function __construct(string $mimetype)
    {
        $this->mimetype = $mimetype;
    }

    public static function fromString(string $mimetype)
    {
        return new static($mimetype);
    }

    public function icon(): string
    {
        if(isset($this->mapping[$this->mimetype])) {
            return $this->mapping[$this->mimetype];
        }

        foreach($this->mapping as $mimetype => $icon) {
            if(Str::contains($this->mimetype, $mimetype)) {
                return $icon;
            }
        }

        return self::$fallback;
    }
}
