Redactor.add('plugin', 'alignment', {
    translations: {
        en: {
            align: 'Align',
            'align-left': 'Align Left',
            'align-center': 'Align Center',
            'align-right': 'Align Right',
            'align-justify': 'Align Justify',
        },
    },
    init(t) {
        (this.app = t), (this.opts = t.opts), (this.lang = t.lang), (this.block = t.block), (this.toolbar = t.toolbar);
    },
    start() {
        const t = {};
        (t.left = { title: this.lang.get('align-left'), api: 'plugin.alignment.set', args: 'left' }),
            (t.center = { title: this.lang.get('align-center'), api: 'plugin.alignment.set', args: 'center' }),
            (t.right = { title: this.lang.get('align-right'), api: 'plugin.alignment.set', args: 'right' }),
            (t.justify = { title: this.lang.get('align-justify'), api: 'plugin.alignment.set', args: 'justify' });
        const i = this.toolbar.addButton('alignment', { title: this.lang.get('align') });
        i.setIcon('<i class="re-icon-alignment"></i>'), i.setDropdown(t);
    },
    set(t) {
        if (t === 'left' && this.opts.direction === 'ltr') return this._remove();
        const i = { style: { 'text-align': t } };
        this.block.toggle(i);
    },
    _remove() {
        this.block.remove({ style: 'text-align' });
    },
});
